{"ast":null,"code":"import _slicedToArray from \"C:/Users/xx/Downloads/assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\xx\\\\Downloads\\\\assignment\\\\src\\\\Pages\\\\EditTask.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button } from \"../Components/Button\";\nimport { TextArea } from \"../Components/TextArea\";\nimport { TextInput } from \"../Components/TextInput\";\nimport { editTask } from \"../State/slice/taskSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { PageLayout } from \"../Components/PageLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var EditTask = function EditTask() {\n  _s();\n  var _useParams = useParams(),\n    taskId = _useParams.taskId;\n  var _useSelector = useSelector(function (state) {\n      return state.tasks;\n    }),\n    tasks = _useSelector.tasks;\n  var task = tasks[taskId];\n  var dispatch = useDispatch();\n  var _useState = useState(task.taskData.title),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(task.taskData.description),\n    _useState4 = _slicedToArray(_useState3, 2),\n    description = _useState4[0],\n    setDescription = _useState4[1];\n  var navigate = useNavigate();\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n    dispatch(editTask({\n      taskId: taskId,\n      task: {\n        taskId: taskId,\n        taskData: {\n          title: title,\n          description: description,\n          completed: task.taskData.completed\n        }\n      }\n    }));\n    navigate(\"/task/\" + taskId);\n  };\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    title: \"Edit task\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"w-full p-2 gap-3 mt-3 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        placeholder: \"Enter your title\",\n        value: title,\n        setter: setTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(TextArea, {\n        value: description,\n        setter: setDescription,\n        placeholder: \"Enter your description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, _this);\n};\n_s(EditTask, \"51v29ILBkAIXGclH+7ZYx/HPV6I=\", false, function () {\n  return [useParams, useSelector, useDispatch, useNavigate];\n});\n_c = EditTask;\nvar _c;\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["useState","useDispatch","Button","TextArea","TextInput","editTask","useNavigate","useParams","useSelector","PageLayout","jsxDEV","_jsxDEV","EditTask","_s","_useParams","taskId","_useSelector","state","tasks","task","dispatch","_useState","taskData","title","_useState2","_slicedToArray","setTitle","_useState3","description","_useState4","setDescription","navigate","onSubmit","e","preventDefault","completed","children","className","placeholder","value","setter","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["C:/Users/xx/Downloads/assignment/src/Pages/EditTask.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button } from \"../Components/Button\";\r\nimport { TextArea } from \"../Components/TextArea\";\r\nimport { TextInput } from \"../Components/TextInput\";\r\nimport { editTask } from \"../State/slice/taskSlice\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { PageLayout } from \"../Components/PageLayout\";\r\n\r\nexport const EditTask = () => {\r\n    const { taskId } = useParams();\r\n    const { tasks } = useSelector((state) => state.tasks);\r\n    const task = tasks[taskId];\r\n    const dispatch = useDispatch();\r\n    const [title, setTitle] = useState(task.taskData.title);\r\n    const [description, setDescription] = useState(task.taskData.description);\r\n    const navigate = useNavigate();\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            editTask({\r\n                taskId,\r\n                task: {\r\n                    taskId,\r\n                    taskData: {\r\n                        title,\r\n                        description,\r\n                        completed: task.taskData.completed,\r\n                    },\r\n                },\r\n            })\r\n        );\r\n        navigate(\"/task/\" + taskId);\r\n    };\r\n\r\n    return (\r\n        <PageLayout title={\"Edit task\"}>\r\n            <form\r\n                onSubmit={onSubmit}\r\n                className=\"w-full p-2 gap-3 mt-3 flex flex-col\"\r\n            >\r\n                <TextInput\r\n                    placeholder={\"Enter your title\"}\r\n                    value={title}\r\n                    setter={setTitle}\r\n                />\r\n                <TextArea\r\n                    value={description}\r\n                    setter={setDescription}\r\n                    placeholder={\"Enter your description\"}\r\n                />\r\n                <Button title={\"Edit Task\"} />\r\n            </form>\r\n        </PageLayout>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}